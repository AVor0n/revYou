version: "3.8"

services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "${FRONT_PORT:-3000}:80"

  backend:
    build: ./backend
    container_name: backend
    environment:
      HOST: "${HOST}"
      GITLAB_TOKEN}: "${GITLAB_TOKEN}}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://db:${POSTGRES_PORT}/${POSTGRES_DB}"
    ports:
      - "${BACK_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: "${PGDATA}"
    volumes:
      - "postgres:/var/lib/postgresql/data"
      - "./db/init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  gitlab:
    image: "gitlab/gitlab-ce:latest"
    restart: always
    hostname: "${HOST}"
    container_name: gitlab-ce
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url "https://${HOST}/gitlab"
        gitlab_rails['gitlab_shell_ssh_port'] = 23
        gitlab_rails['initial_root_password'] = "${GITLAB_ROOT_PASSWORD}"
    ports:
      - "${GITLAB_PORT:-8081}:80"
      - "${GITLAB_HTTPS_PORT:-443}:443"
      - "${GITLAB_SSH_PORT:-23}:22"
    volumes:
      - "$GITLAB_HOME/config:/etc/gitlab"
      - "$GITLAB_HOME/logs:/var/log/gitlab"
      - "$GITLAB_HOME/data:/var/opt/gitlab"
    links:
      - db
  nginx:
    image: nginx:1.19.3
    links:
      - gitlab
      - frontend
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      - gitlab
      - frontend
      - backend

volumes:
  postgres:
  gitlab:
