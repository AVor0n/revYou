
name: cross_review_workflow

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  #build_and_push_to_docker_hub:
    #name: Push Docker image to Docker Hub
    #runs-on: ubuntu-latest
    #steps:
     # - name: Check out the repo
      #  uses: actions/checkout@v2
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1
      #- name: Login to Docker
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}
      #- name: Push frontend to Docker Hub web
      #  uses: docker/build-push-action@v2
      #  with:
      #    push: true
      #    tags: semashkevichea/cross_review_front:latest
      #    context: frontend
      #    file: frontend/dockerfile
      #- name: Push backend to Docker Hub web
      #  uses: docker/build-push-action@v2
      #  with:
      #    push: true
      #    tags: semashkevichea/cross_review_back:latest
      #    context: backend
      #    file: backend/Dockerfile

  deploy:
    if: ${{ github.ref }} == 'main'
    runs-on: ubuntu-latest
    # needs: build_and_push_to_docker_hub
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Copy init.db to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "./db"
          target: "./"

      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm -f
            sudo docker-compose pull
            sudo docker volume rm semashkevichea_postgres
            sudo rm .env
            touch .env
            echo HOST=${{ secrets.HOST }} >> .env
            echo FRONT_PORT=${{ secrets.FRONT_PORT }} >> .env
            echo BACK_PORT=${{ secrets.BACK_PORT }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo GITLAB_PORT=${{ secrets.GITLAB_PORT }} >> .env
            echo GITLAB_HTTPS_PORT=${{ secrets.GITLAB_HTTPS_PORT }} >> .env
            sudo docker-compose up -d             
  
